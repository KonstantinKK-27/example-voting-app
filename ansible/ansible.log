2023-03-16 20:35:40,692 p=28084 u=vagrant n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: appsrvgrp         // Группа

2023-03-16 20:35:40,694 p=28084 u=vagrant n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: которую нужно будет прописать в Inventory

2023-03-16 20:35:40,699 p=28084 u=vagrant n=ansible | PLAY [Deploy containers] **************************************************************************************************************************
2023-03-16 20:35:40,700 p=28084 u=vagrant n=ansible | skipping: no hosts matched
2023-03-16 20:35:40,701 p=28084 u=vagrant n=ansible | PLAY RECAP ****************************************************************************************************************************************
2023-03-16 20:37:36,136 p=28105 u=vagrant n=ansible | ERROR! Unexpected Exception, this is probably a bug: 'utf-8' codec can't encode character '\udcb8' in position 297: surrogates not allowed
2023-03-16 20:37:36,138 p=28105 u=vagrant n=ansible | to see the full traceback, use -vvv
2023-03-16 20:37:36,152 p=28105 u=vagrant n=ansible | the full traceback was:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/parsing/utils/yaml.py", line 72, in from_yaml
    new_data = json.loads(data, cls=AnsibleJSONDecoder)
  File "/usr/lib/python3.8/json/__init__.py", line 370, in loads
    return cls(**kw).decode(s)
  File "/usr/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/bin/ansible-playbook", line 128, in <module>
    exit_code = cli.run()
  File "/usr/lib/python3/dist-packages/ansible/cli/playbook.py", line 137, in run
    results = pbex.run()
  File "/usr/lib/python3/dist-packages/ansible/executor/playbook_executor.py", line 111, in run
    pb = Playbook.load(playbook_path, variable_manager=self._variable_manager, loader=self._loader)
  File "/usr/lib/python3/dist-packages/ansible/playbook/__init__.py", line 51, in load
    pb._load_playbook_data(file_name=file_name, variable_manager=variable_manager)
  File "/usr/lib/python3/dist-packages/ansible/playbook/__init__.py", line 70, in _load_playbook_data
    ds = self._loader.load_from_file(os.path.basename(file_name))
  File "/usr/lib/python3/dist-packages/ansible/parsing/dataloader.py", line 97, in load_from_file
    parsed_data = self.load(data=file_data, file_name=file_name, show_content=show_content, json_only=json_only)
  File "/usr/lib/python3/dist-packages/ansible/parsing/dataloader.py", line 80, in load
    return from_yaml(data, file_name, show_content, self._vault.secrets, json_only=json_only)
  File "/usr/lib/python3/dist-packages/ansible/parsing/utils/yaml.py", line 80, in from_yaml
    new_data = _safe_load(data, file_name=file_name, vault_secrets=vault_secrets)
  File "/usr/lib/python3/dist-packages/ansible/parsing/utils/yaml.py", line 49, in _safe_load
    loader = AnsibleLoader(stream, file_name, vault_secrets)
  File "/usr/lib/python3/dist-packages/ansible/parsing/yaml/loader.py", line 31, in __init__
    Parser.__init__(self, stream)  # pylint: disable=non-parent-init-called
  File "ext/_yaml.pyx", line 288, in _yaml.CParser.__init__
UnicodeEncodeError: 'utf-8' codec can't encode character '\udcb8' in position 297: surrogates not allowed

2023-03-16 20:39:05,414 p=28112 u=vagrant n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  mapping values are not allowed in this context

The error appears to be in '/home/vagrant/example-voting-app/ansible/votingapp-container-setup.yml': line 23, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    - Stop all docker containers
      shell:
           ^ here

2023-03-16 20:39:40,556 p=28117 u=vagrant n=ansible | PLAY [Deploy containers] **************************************************************************************************************************
2023-03-16 20:39:40,597 p=28117 u=vagrant n=ansible | TASK [Gathering Facts] ****************************************************************************************************************************
2023-03-16 20:39:46,934 p=28117 u=vagrant n=ansible | ok: [app01-staging]
2023-03-16 20:39:46,995 p=28117 u=vagrant n=ansible | TASK [Include vars] *******************************************************************************************************************************
2023-03-16 20:39:47,036 p=28117 u=vagrant n=ansible | fatal: [app01-staging]: FAILED! => {"ansible_facts": {}, "ansible_included_var_files": [], "changed": false, "message": "/home/vagrant/example-voting-app/ansible/vars/all does not have a valid extension: yaml, yml, json"}
2023-03-16 20:39:47,046 p=28117 u=vagrant n=ansible | PLAY RECAP ****************************************************************************************************************************************
2023-03-16 20:39:47,049 p=28117 u=vagrant n=ansible | app01-staging              : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-03-16 20:41:01,910 p=28151 u=vagrant n=ansible | PLAY [Deploy containers] **************************************************************************************************************************
2023-03-16 20:41:01,933 p=28151 u=vagrant n=ansible | TASK [Gathering Facts] ****************************************************************************************************************************
2023-03-16 20:41:06,364 p=28151 u=vagrant n=ansible | ok: [app01-staging]
2023-03-16 20:41:06,418 p=28151 u=vagrant n=ansible | TASK [Include vars] *******************************************************************************************************************************
2023-03-16 20:41:06,465 p=28151 u=vagrant n=ansible | ok: [app01-staging]
2023-03-16 20:41:06,507 p=28151 u=vagrant n=ansible | TASK [Make dir] ***********************************************************************************************************************************
2023-03-16 20:41:06,996 p=28151 u=vagrant n=ansible | changed: [app01-staging]
2023-03-16 20:41:07,039 p=28151 u=vagrant n=ansible | TASK [Copy DC file] *******************************************************************************************************************************
2023-03-16 20:41:07,989 p=28151 u=vagrant n=ansible | changed: [app01-staging]
2023-03-16 20:41:08,035 p=28151 u=vagrant n=ansible | TASK [Stop all docker containers] *****************************************************************************************************************
2023-03-16 20:41:08,703 p=28151 u=vagrant n=ansible | fatal: [app01-staging]: FAILED! => {"changed": true, "cmd": "docker stop $(docker ps -q)", "delta": "0:00:00.144428", "end": "2023-03-16 20:41:08.725690", "msg": "non-zero return code", "rc": 1, "start": "2023-03-16 20:41:08.581262", "stderr": "\"docker stop\" requires at least 1 argument.\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stderr_lines": ["\"docker stop\" requires at least 1 argument.", "See 'docker stop --help'.", "", "Usage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]", "", "Stop one or more running containers"], "stdout": "", "stdout_lines": []}
2023-03-16 20:41:08,706 p=28151 u=vagrant n=ansible | ...ignoring
2023-03-16 20:41:08,746 p=28151 u=vagrant n=ansible | TASK [Remove all unused and dangling docker images] ***********************************************************************************************
2023-03-16 20:41:09,194 p=28151 u=vagrant n=ansible | changed: [app01-staging]
2023-03-16 20:41:09,230 p=28151 u=vagrant n=ansible | TASK [Setup with docker-compose] ******************************************************************************************************************
2023-03-16 20:41:49,290 p=28151 u=vagrant n=ansible | changed: [app01-staging]
2023-03-16 20:41:49,340 p=28151 u=vagrant n=ansible | TASK [Display result] *****************************************************************************************************************************
2023-03-16 20:41:49,409 p=28151 u=vagrant n=ansible | ok: [app01-staging] => {
    "msg": "Log from docker-compose: \n v1: Pulling from examplevotingapp_vote\nDigest: sha256:148dbaf65c4420872a7fe839d2c8d44119f3b2ef7796fa2d766c29f795fbd017\nStatus: Downloaded newer image for acm:5000/examplevotingapp_vote:v1\nv1: Pulling from examplevotingapp_result\nDigest: sha256:e3dee1f4716126175d46cfed6015aeaff38b489e3244145389281ae2660f5b96\nStatus: Downloaded newer image for acm:5000/examplevotingapp_result:v1\nv1: Pulling from examplevotingapp_worker\nDigest: sha256:46f0a9d89701ef9f0d71ade14ed3826c0f622e7f7279ab175668fe1dbdd8d252\nStatus: Downloaded newer image for acm:5000/examplevotingapp_worker:v1\nalpine: Pulling from library/redis\nDigest: sha256:eda49a8747271c820ee64ae71b360154af91ab54e91dc382b6f4fa3ff9621b05\nStatus: Downloaded newer image for redis:alpine\n15-alpine: Pulling from library/postgres\nDigest: sha256:1f86ede0903f60ecd2eb630b15803567324da7aa0d1f7bbc3a8f1fe5247a4592\nStatus: Downloaded newer image for postgres:15-alpine\n"
}
2023-03-16 20:41:49,509 p=28151 u=vagrant n=ansible | PLAY RECAP ****************************************************************************************************************************************
2023-03-16 20:41:49,510 p=28151 u=vagrant n=ansible | app01-staging              : ok=8    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   
2023-03-17 00:05:57,220 p=46150 u=vagrant n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: appsrv01

2023-03-17 00:05:57,221 p=46150 u=vagrant n=ansible | [WARNING]: No hosts matched, nothing to do

2023-03-17 00:06:13,436 p=46163 u=vagrant n=ansible | app01-staging | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
